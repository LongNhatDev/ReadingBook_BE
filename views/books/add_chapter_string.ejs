<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <Book-Form>
  </title>
</head>

<body>
  <div>
    <form action="/api/chapters" method="POST">
      <input type="hidden" id="chapter-content-url" name="contentLink">
      <label>Content: </label>
      <input type="text" name="content" id="content"/><br><br>
      <button type="submit">Create</button>
    </form>
  </div>
  <script>
    (() => {
      document.getElementById("chapter-audio").onchange = () => {
        const files = document.getElementById('chapter-audio').files;
        const file = files[0];
        if (file == null) {
          return alert('No file selected.');
        }
        getSignedRequest1(file);
      };
    })();

    function getSignedRequest1(file) {
      const xhr = new XMLHttpRequest();
      const bucketName = "book-audios";
      xhr.open('GET', `/api/sign-s3?file-name=${new_chapter}&file-type=${txt}&bucket-name=${bucketName}`);
      xhr.onreadystatechange = () => {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            const response = JSON.parse(xhr.responseText);
            uploadFile1(file, response.signedRequest, response.url);
          }
          else {
            alert('Could not get signed URL.');
          }
        }
      };
      xhr.send();
    }

    function uploadFile1(file, signedRequest, url) {
      const xhr = new XMLHttpRequest();
      xhr.open('PUT', signedRequest);
      xhr.onreadystatechange = () => {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            alert(url);
            document.getElementById('chapter-audio-url').value = url;
          }
          else {
            console.log(xhr);
            alert('Could not upload file.');
          }
        }
      };
      xhr.send(file);
    }
    (() => {
      document.getElementById("content").onchange = () => {
        const files = document.getElementById('content').files;
        const file = files[0];
        if (file == null) {
          return alert('No file selected.');
        }
        getSignedRequest2(file);
      };
    })();

    function getSignedRequest2(file) {
      const xhr = new XMLHttpRequest();
      const bucketName = "chapters";
      xhr.open('GET', `/api/sign-s3?file-name=${file.name}&file-type=${file.type}&bucket-name=${bucketName}`);
      xhr.onreadystatechange = () => {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            const response = JSON.parse(xhr.responseText);
            uploadFile2(file, response.signedRequest, response.url);
          }
          else {
            alert('Could not get signed URL.');
          }
        }
      };
      xhr.send();
    }

    function uploadFile2(file, signedRequest, url) {
      const xhr = new XMLHttpRequest();
      xhr.open('PUT', signedRequest);
      xhr.onreadystatechange = () => {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            alert(url);
            document.getElementById('chapter-content-url').value = url;
          }
          else {
            console.log(xhr);
            alert('Could not upload file.');
          }
        }
      };
      xhr.send(file);
    }
  </script>
</body>

</html>
